import operator as оператор

from операции.база import Оп
from типы import Стэк, ТаблицаИмен, КонстПул, СтдТипы, Нуль


class Толкнуть(Оп):

    def __init__(сам, знач: СтдТипы | Нуль):
        сам.знач = знач

    def исполнить(сам, стэк: Стэк, таблица_имен: ТаблицаИмен, конст_пул: КонстПул):
        стэк.append(сам.знач)


class ЗагрКонст(Оп):

    def __init__(сам, инд: int):
        сам.инд = инд

    def исполнить(сам, стэк: Стэк, таблица_имен: ТаблицаИмен, конст_пул: КонстПул):
        знач = конст_пул[сам.инд]
        стэк.append(знач)


class ЗагрИмя(Оп):

    def __init__(сам, инд: int):
        сам.инд = инд

    def исполнить(сам, стэк: Стэк, таблица_имен: ТаблицаИмен, конст_пул: КонстПул):
        знач = таблица_имен[сам.инд][1]
        стэк.append(знач)


class СохрКакИмя(Оп):

    def __init__(сам, инд: int):
        сам.инд = инд

    def исполнить(сам, стэк: Стэк, таблица_имен: ТаблицаИмен, конст_пул: КонстПул):
        знач = стэк.pop()
        имя = таблица_имен[сам.инд][0]
        таблица_имен[сам.инд] = (имя, знач)


class ДвоичнОп(Оп):

    _КОД_К_ОПЕРАЦИИ = {
        0: оператор.add,
        1: оператор.sub,
        2: оператор.mul,
        3: оператор.truediv,
    }

    def __init__(сам, код: int):
        сам.код = код

    def исполнить(сам, стэк: Стэк, таблица_имен: ТаблицаИмен, конст_пул: КонстПул):
        правый = стэк.pop()
        левый = стэк.pop()
        оп = ДвоичнОп._КОД_К_ОПЕРАЦИИ[сам.код]
        рез = оп(левый, правый)
        стэк.append(рез)


class Вызвать(Оп):

    def __init__(сам, аргументов: int):
        сам.аргументов = аргументов

    def исполнить(сам, стэк: Стэк, таблица_имен: ТаблицаИмен, конст_пул: КонстПул):
        аргументы = [стэк.pop() for _ in range(сам.аргументов)]
        вызываемое = стэк.pop()
        стэк.pop()  # NULL
        результат = вызываемое(*аргументы)
        стэк.append(результат)

